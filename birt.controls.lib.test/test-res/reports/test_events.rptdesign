<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.5.0.v201506092134 Build &lt;@BUILD@></property>
    <property name="units">in</property>
    <method name="initialize"><![CDATA[var out = {
	getFile: function() {
		return new Packages.java.io.File("test_events.log");
	},
	getPrintStream: function() {
		var file = this.getFile();
		var fos = new Packages.java.io.FileOutputStream(file, true);
		return new Packages.java.io.PrintStream(fos);
	},
	println: function(message) {
		Packages.java.lang.System.out.println("out.println " + message);
		var ps = this.getPrintStream();
		ps.println(message);
		ps.close();
	},
	clear: function() {
		var file = this.getFile();
		Packages.java.lang.System.out.println("Deleting " + file.getAbsolutePath());
		file.delete();
	}
};
]]></method>
    <method name="onPrepare"><![CDATA[// CustomFunctions.AppendLibraryContent("TestLibraryElement", reportContext);
// CustomFunctions.BirtLogger("**** this is a test");
out.clear();]]></method>
    <method name="beforeFactory"><![CDATA[// CustomFunctions.DisplayParameters(reportContext);
]]></method>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <list-property name="libraries">
        <structure>
            <property name="fileName">new_library.rptlibrary</property>
            <property name="namespace">new_library</property>
        </structure>
    </list-property>
    <parameters>
        <scalar-parameter name="row_count" id="9">
            <text-property name="promptText">Number of rows</text-property>
            <property name="valueType">static</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">20</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="Data Source" id="7"/>
    </data-sources>
    <data-sets>
        <script-data-set name="Data Set" id="8">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">0</property>
                    <property name="name">rownum</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">1</property>
                    <property name="name">value</property>
                    <property name="dataType">float</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">rownum</property>
                </structure>
                <structure>
                    <property name="columnName">value</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">rownum</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">value</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">Data Source</property>
            <method name="open"><![CDATA[row_index = 0;]]></method>
            <method name="fetch"><![CDATA[if(row_index >= params["row_count"].value)
	return false;
row.rownum = row_index++;
row.value = Math.random();
return true;]]></method>
        </script-data-set>
    </data-sets>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">sans-serif</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="crosstab" id="5">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
        <style name="crosstab-cell" id="6">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <page-footer>
                <text id="3">
                    <property name="contentType">html</property>
                    <text-property name="content"><![CDATA[<value-of>new Date()</value-of>]]></text-property>
                </text>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <table id="10">
            <property name="dataSet">Data Set</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">rownum</property>
                    <text-property name="displayName">rownum</text-property>
                    <expression name="expression" type="javascript">dataSetRow["rownum"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">value</property>
                    <text-property name="displayName">value</text-property>
                    <expression name="expression" type="javascript">dataSetRow["value"]</expression>
                    <property name="dataType">float</property>
                </structure>
            </list-property>
            <column id="30"/>
            <column id="35"/>
            <header>
                <row id="11">
                    <cell id="27">
                        <label id="37">
                            <text-property name="text">rotated text</text-property>
                        </label>
                    </cell>
                    <cell id="32">
                        <label id="38">
                            <text-property name="text">dotbar</text-property>
                        </label>
                    </cell>
                </row>
            </header>
            <detail>
                <row id="16">
                    <method name="onCreate"><![CDATA[out.println("detail row onCreate");]]></method>
                    <cell id="28">
                        <extended-item extensionName="RotatedText" id="31">
                            <property name="rotationAngle">45</property>
                            <expression name="text">row["value"]</expression>
                            <property name="wrapPoint">0in</property>
                            <property name="fontFamily">sans-serif</property>
                            <property name="fontSize">10pt</property>
                            <property name="fontStyle">normal</property>
                            <property name="fontWeight">normal</property>
                            <property name="color">#000000</property>
                            <method name="onPrepare"><![CDATA[// CustomFunctions.BirtLogger("RotatedText.onPrepare");
out.println("RotatedText.onPrepare");

]]></method>
                            <method name="onCreate"><![CDATA[// CustomFunctions.BirtLogger("RotatedText.onCreate");
this.helpText = "foobar";
var r = Math.floor(row.value * 256);
var g = Math.floor(row.value * 256 * 256) &amp; 255;
var b = Math.floor(row.value * 256 * 256 * 256) &amp; 255;
this.setFontColor(r, g, b);
out.println("RotatedText.onCreate");]]></method>
                            <method name="onRender"><![CDATA[// CustomFunctions.BirtLogger("RotatedText.onRender");
out.println("RotatedText.onRender");]]></method>
                        </extended-item>
                    </cell>
                    <cell id="33">
                        <extended-item extensionName="DotBar" id="36">
                            <expression name="valueExpression">row["value"] * 8</expression>
                            <property name="displayValue">8</property>
                            <property name="dotHeight">11pt</property>
                            <property name="dotWidth">11pt</property>
                            <property name="dotSpacing">5pt</property>
                            <property name="vertical">false</property>
                            <property name="hasBorder">true</property>
                            <property name="hasFill">true</property>
                            <property name="borderColor">#000000</property>
                            <property name="fillColor">#000000</property>
                            <property name="dotShape">oval</property>
                            <property name="numberPosition">hidden</property>
                            <property name="numberWidth">15pt</property>
                            <property name="numberHeight">11pt</property>
                            <property name="wrapPoint">0</property>
                            <property name="fontFamily">sans-serif</property>
                            <property name="fontSize">10pt</property>
                            <property name="fontStyle">normal</property>
                            <property name="fontWeight">normal</property>
                            <property name="color">#000000</property>
                            <method name="onPrepare"><![CDATA[// CustomFunctions.BirtLogger
// Packages.java.lang.System.out.println("DotBar.onPrepare");
// Packages.java.lang.System.out.println(typeof this);
/*
for(var key in this) {
	var value = this[key];
	Packages.java.lang.System.out.println(key + " = " + value);
}
*/
out.println("DotBar.onPrepare");]]></method>
                            <method name="onCreate"><![CDATA[// CustomFunctions.BirtLogger
// Packages.java.lang.System.out.println("DotBar.onCreate");
// Packages.java.lang.System.out.println(typeof this);
/*
var test = "abc";
for(var key in this) {
	var value = this[key];
	Packages.java.lang.System.out.println(key + " = " + value);
}
*/
var r = Math.floor(row.value * 256);
var g = Math.floor(row.value * 256 * 256) &amp; 255;
var b = Math.floor(row.value * 256 * 256 * 256) &amp; 255;
this.setFillColor(r, g, b);
out.println("DotBar.onCreate " + this.getClass().getName());
]]></method>
                            <method name="onRender"><![CDATA[// CustomFunctions.BirtLogger
// Packages.java.lang.System.out.println("DotBar.onRender");
// Packages.java.lang.System.out.println(typeof this);
/*
for(var key in this) {
	var value = this[key];
	Packages.java.lang.System.out.println(key + " = " + value);
}
*/
out.println("DotBar.onRender");]]></method>
                        </extended-item>
                    </cell>
                </row>
            </detail>
        </table>
    </body>
</report>
